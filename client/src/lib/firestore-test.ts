// Firestore Ï†ÄÏû• ÌÖåÏä§Ìä∏ Ìï®Ïàò
import { doc, setDoc, getDoc, collection, addDoc, Timestamp } from 'firebase/firestore';
import { db } from './firebase';

// Í∞ÑÎã®Ìïú ÌÖåÏä§Ìä∏ Î¨∏ÏÑú Ï†ÄÏû•
export const testFirestoreWrite = async () => {
  try {
    console.log('üß™ Starting Firestore write test...');
    
    const testData = {
      message: 'Hello Firestore!',
      timestamp: Timestamp.now(),
      testId: Math.random().toString(36).substring(7)
    };
    
    // 1. Í≥†Ï†ï IDÎ°ú Î¨∏ÏÑú Ï†ÄÏû• ÌÖåÏä§Ìä∏
    const testDocRef = doc(db, 'test', 'write-test');
    await setDoc(testDocRef, testData);
    console.log('‚úÖ Test document saved with fixed ID');
    
    // 2. Ï†ÄÏû• ÏßÅÌõÑ ÏùΩÍ∏∞ ÌÖåÏä§Ìä∏
    const readBack = await getDoc(testDocRef);
    if (readBack.exists()) {
      console.log('‚úÖ Test document read back successfully:', readBack.data());
    } else {
      console.error('‚ùå Test document not found after save!');
    }
    
    // 3. ÏûêÎèô IDÎ°ú Î¨∏ÏÑú Ï†ÄÏû• ÌÖåÏä§Ìä∏
    const testCollectionRef = collection(db, 'test');
    const autoDocRef = await addDoc(testCollectionRef, {
      ...testData,
      type: 'auto-id'
    });
    console.log('‚úÖ Auto-ID document saved:', autoDocRef.id);
    
    // 4. ÏûêÎèô ID Î¨∏ÏÑú ÏùΩÍ∏∞ ÌÖåÏä§Ìä∏
    const autoReadBack = await getDoc(autoDocRef);
    if (autoReadBack.exists()) {
      console.log('‚úÖ Auto-ID document read back successfully:', autoReadBack.data());
    } else {
      console.error('‚ùå Auto-ID document not found after save!');
    }
    
    return true;
  } catch (error) {
    console.error('‚ùå Firestore test failed:', error);
    return false;
  }
};

// ÏÇ¨Ïö©Ïûê Ïª¨Î†âÏÖò ÏßÅÏ†ë ÌÖåÏä§Ìä∏
export const testUserCollection = async () => {
  try {
    console.log('üë§ Testing user collection write...');
    
    const testUser = {
      email: 'test@example.com',
      name: 'Test User',
      provider: 'test',
      profileImage: '',
      isAdmin: false,
      createdAt: Timestamp.now(),
      updatedAt: Timestamp.now(),
      lastLogin: Timestamp.now(),
      loginCount: 1
    };
    
    const userDocRef = doc(db, 'users', 'test-user-123');
    await setDoc(userDocRef, testUser);
    console.log('‚úÖ Test user document saved');
    
    const userReadBack = await getDoc(userDocRef);
    if (userReadBack.exists()) {
      console.log('‚úÖ Test user document read back successfully:', userReadBack.data());
    } else {
      console.error('‚ùå Test user document not found after save!');
    }
    
    return true;
  } catch (error) {
    console.error('‚ùå User collection test failed:', error);
    return false;
  }
};
